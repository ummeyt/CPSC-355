define(loop_r, x19)
define(x_r, x29)
define(y_r, x30)


fmt: 	.string "Expression: %d(%d^3)"
//fmt1:	.string " - %d(%d^2)\n"
	.balign 4
	.global main

main: 	stp	x_r, y_r, [sp, -16]!
	mov	x_r, sp
	mov	loop_r, 0

	mov	x20, 0
	mov	x21, -4
	mov	x22, 27
	mov	x23, 5
	mov	x24, 45

	b	test

top:	adrp 	x0, fmt
	add 	x0, x0, :lo12:fmt

	mul	y_r, x_r, x_r
	mul	y_r, x_r, y_r
	mul	y_r, y_r, x21

//	adrp	x1, fmt1
//	add	x1, x1, :lo12:fmt1

	mul	x_r, x_r, x_r
	mul	x_r, x_r, x22

	sub	y_r, y_r, x_r
	mul	x_r, x_r, x20
	mul	x_r, x_r, x23
	add	y_r, y_r, x_r
	add	y_r, y_r, x24

	add 	x1, loop_r, 1
	bl 	printf

	add 	loop_r, loop_r, 1

test:	cmp 	loop_r, 5
	b.le 	top

done:	mov 	w0, 0
	ldp 	x_r, y_r,[sp], 16
	ret

