Script started on 2017-10-28 00:02:19-0600
]0;ummeyzarin.tashnim@csa3:~/asg3ummeyzarin.tashnim@csa3:~/asg3$ gdb asg3
GNU gdb (GDB) Fedora 8.0-13.fc26
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from asg3...done.
(gdb) b loop_i
Breakpoint 1 at 0x40066c: file assign3.s, line 65.
(gdb) r
Starting program: /home/ugd/ummeyzarin.tashnim/asg3/asg3 
v[0]: 103
v[1]: 198
v[2]: 105
v[3]: 115
v[4]: 81
v[5]: 255
v[6]: 74
v[7]: 236
v[8]: 41
v[9]: 205
v[10]: 186
v[11]: 171
v[12]: 242
v[13]: 251
v[14]: 227
v[15]: 70
v[16]: 124
v[17]: 194
v[18]: 84
v[19]: 248
v[20]: 27
v[21]: 232
v[22]: 231
v[23]: 141
v[24]: 118
v[25]: 90
v[26]: 46
v[27]: 99
v[28]: 51
v[29]: 159
v[30]: 201
v[31]: 154
v[32]: 102
v[33]: 50
v[34]: 13
v[35]: 183
v[36]: 49
v[37]: 88
v[38]: 163
v[39]: 90
v[40]: 37
v[41]: 93
v[42]: 5
v[43]: 23
v[44]: 88
v[45]: 233
v[46]: 94
v[47]: 212
v[48]: 171
v[49]: 178

Breakpoint 1, loop_i () at assign3.s:65
65	loop_i:		ldr	w22, [x28, w19, SXTW 2] 	//temp = v[i]
(gdb) ni
66			mov	w21, w19		 	//w21 = w19
(gdb) display $w19
1: $w19 = 1
(gdb) display $w21
2: $w21 = 4195568
(gdb) ni
67			b	loop_j_test			
1: $w19 = 1
2: $w21 = 1
(gdb) 
loop_j_test () at assign3.s:81
81			cmp	w21, 0				// if j>0, repeat
1: $w19 = 1
2: $w21 = 1
(gdb) 
82			b.le	next				// else exit to for(i)
1: $w19 = 1
2: $w21 = 1
(gdb) 
83			sub	w23, w21, 1			// set w23 to j-1	
1: $w19 = 1
2: $w21 = 1
(gdb) display $w23
3: $w23 = 0
(gdb) 
(gdb) ni
84			ldr	w25, [x28, w23, SXTW 2]		// set w25 to v[j-1]	105	198
1: $w19 = 1
2: $w21 = 1
3: $w23 = 0
(gdb) display $w25
4: $w25 = 0
(gdb) ni
and_cond () at assign3.s:85
85	and_cond:	cmp	w22, w25			// temp < v[j-1]
1: $w19 = 1
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
(gdb) display $w22
5: $w22 = 198
(gdb) 
(gdb) ni
86			b.lt	loop_j				// goto loop j for sorting
1: $w19 = 1
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 198
(gdb) 
87			b	next				// else exit to for(i)
1: $w19 = 1
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 198
(gdb) 
next () at assign3.s:69
69	next:		str	w22, [x28, w21, SXTW 2]	//v[j] = temp
1: $w19 = 1
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 198
(gdb) 
70			add	w19, w19, 1			//increment w19
1: $w19 = 1
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 198
(gdb) 
loop_i_test () at assign3.s:72
72	loop_i_test:	cmp	w19, size			//while i < size
1: $w19 = 2
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 198
(gdb) 
73			b.lt	loop_i				//goto loop i
1: $w19 = 2
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 198
(gdb) 

Breakpoint 1, loop_i () at assign3.s:65
65	loop_i:		ldr	w22, [x28, w19, SXTW 2] 	//temp = v[i]
1: $w19 = 2
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 198
(gdb) 
66			mov	w21, w19		 	//w21 = w19
1: $w19 = 2
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 105
(gdb) 
67			b	loop_j_test			
1: $w19 = 2
2: $w21 = 2
3: $w23 = 0
4: $w25 = 103
5: $w22 = 105
(gdb) 
loop_j_test () at assign3.s:81
81			cmp	w21, 0				// if j>0, repeat
1: $w19 = 2
2: $w21 = 2
3: $w23 = 0
4: $w25 = 103
5: $w22 = 105
(gdb) 
82			b.le	next				// else exit to for(i)
1: $w19 = 2
2: $w21 = 2
3: $w23 = 0
4: $w25 = 103
5: $w22 = 105
(gdb) 
83			sub	w23, w21, 1			// set w23 to j-1	
1: $w19 = 2
2: $w21 = 2
3: $w23 = 0
4: $w25 = 103
5: $w22 = 105
(gdb) 
84			ldr	w25, [x28, w23, SXTW 2]		// set w25 to v[j-1]	105	198
1: $w19 = 2
2: $w21 = 2
3: $w23 = 1
4: $w25 = 103
5: $w22 = 105
(gdb) 
and_cond () at assign3.s:85
85	and_cond:	cmp	w22, w25			// temp < v[j-1]
1: $w19 = 2
2: $w21 = 2
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
86			b.lt	loop_j				// goto loop j for sorting
1: $w19 = 2
2: $w21 = 2
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
loop_j () at assign3.s:76
76	loop_j:		ldr	w24, [x28, w21, SXTW 2]		// load v[j] to w24 	198	103
1: $w19 = 2
2: $w21 = 2
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
77			str	w25, [x28, w21, SXTW 2]		// write w25 to v[j]
1: $w19 = 2
2: $w21 = 2
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
78			str	w24, [x28, w23, SXTW 2]		// write w24 to v[j-1]
1: $w19 = 2
2: $w21 = 2
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
79			sub	w21, w21, 1			// j--
1: $w19 = 2
2: $w21 = 2
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
loop_j_test () at assign3.s:81
81			cmp	w21, 0				// if j>0, repeat
1: $w19 = 2
2: $w21 = 1
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
82			b.le	next				// else exit to for(i)
1: $w19 = 2
2: $w21 = 1
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
83			sub	w23, w21, 1			// set w23 to j-1	
1: $w19 = 2
2: $w21 = 1
3: $w23 = 1
4: $w25 = 198
5: $w22 = 105
(gdb) 
84			ldr	w25, [x28, w23, SXTW 2]		// set w25 to v[j-1]	105	198
1: $w19 = 2
2: $w21 = 1
3: $w23 = 0
4: $w25 = 198
5: $w22 = 105
(gdb) 
and_cond () at assign3.s:85
85	and_cond:	cmp	w22, w25			// temp < v[j-1]
1: $w19 = 2
2: $w21 = 1
3: $w23 = 0
4: $w25 = 103
5: $w22 = 105
(gdb) q
A debugging session is active.

	Inferior 1 [process 26803] will be killed.

Quit anyway? (y or n) y
]0;ummeyzarin.tashnim@csa3:~/asg3ummeyzarin.tashnim@csa3:~/asg3$ exit
exit

Script done on 2017-10-28 00:06:25-0600
